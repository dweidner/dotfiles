#!/usr/bin/env bash

DOTFILES="${DOTFILES:-$HOME/.dotfiles}"
source "$DOTFILES/shell/helpers"

#
# Options/Flags
#
# $DOTFILES             = Path of the local working copy.
# $LAST_PROCESS_STARTED = Name of the subprocess started last.
#

LAST_PROCESS_STARTED=""

#
# Notify user about a started process.
#
# Usage: process_started name [message]
#
#  $1  = Name of the process.
# [$2] = Optional debug message.
#
process_start() {
  local process="$1"
  local message="${2:-Processing...}"
  LAST_PROCESS_STARTED="$process"
  print_status "$message"
}

#
# Notify user about a finished process.
#
# Usage: process_done name [message]
#
#  $1  = Name of the process.
# [$2] = Optional debug message.
#
process_done() {
  # shellcheck disable=SC2034
  local process="${1:-$LAST_PROCESS_STARTED}"
  local message="${2:-Done.}"
  print_success "$message"
  LAST_PROCESS_STARTED=""
}

#
# Notify user about an aborted process.
#
# Usage: process_aborted name [message]
#
#  $1  = Name of the process.
# [$2] = Optional debug message.
#
process_failed() {
  # shellcheck disable=SC2034
  local process="${1:-$LAST_PROCESS_STARTED}"
  local message="${2:-Failed.}"
  print_error "$message"
  LAST_PROCESS_STARTED=""
}

#
# Updates all system software on Mac OSX.
#
# Usage: update_osx
#
update_osx() {
  sudo softwareupdate -i -a
}

#
# Updates homebrew and all its formulae.
#
# Usage: update_homebrew
#
update_homebrew() {
  brew update && brew upgrade && brew cleanup
}

#
# Updates all globally installed node packages.
#
# Usage: update_node_packages
#
update_node_packages() {
  npm update -g
}

#
# Updates all ruby gems currently installed.
#
# Usage: update_ruby_gems
#
update_ruby_gems() {
  gem update
}

#
# Updates all installed zsh plugins using zplug.
#
# Usage: update_zsh_plugins
#
update_zsh_plugins() {
  zplug status || zplug update
}

#
# Updates all installed tmux plugins using tpm.
#
# Usage: update_tmux_plugins [tpm_install_dir]
#
# $1 = Optional path to the tmux plugin manager.
#
update_tmux_plugins() {
  local dir="${1:-$HOME/.tmux/plugins/tpm}"
  if [ -x "$dir" ]; then
    "$dir/bin/update_plugins" all
  fi
}

#
# Script entry point.
#
# Update all components of the current system.
#
# Usage: update
#
main() {
  local tmux_plugin_base="${TMUX_PLUGIN_MANAGER_PATH:-$HOME/.tmux/plugins}"

  if [[ "$OSTYPE" == darwin* ]]; then
    process_start "update_osx" "Updating OSX applications. Requires admin privileges…"
    sudo -v
    update_osx && process_done || process_failed
  fi

  if type brew >/dev/null 2>&1; then
    process_start "update_homebrew" "Updating brew formulae…"
    update_homebrew && process_done || process_failed
  fi

  if type npm >/dev/null 2>&1; then
    process_start "update_node_packages" "Updating global node packages…"
    update_node_packages && process_done || process_failed
  fi

  if type gem >/dev/null 2>&1; then
    process_start "update_ruby_gems" "Updating ruby gems…"
    update_ruby_gems && process_done || process_failed
  fi

  if type zplug >/dev/null 2>&1; then
    process_start "update_zsh_plugins" "Updating zsh plugins…"
    update_zsh_plugins && process_done || process_failed
  fi

  if [ -d "$tmux_plugin_base/tpm" ]; then
    process_start "update_tmux_plugins" "Updating tmux plugins…"
    update_tmux_plugins "$tmux_plugin_base/tpm" && process_done || process_failed
  fi

  print_success "Done. Updated all system components."
}

main "$@"
