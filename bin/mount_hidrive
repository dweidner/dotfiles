#!/usr/bin/env bash

#
# How to use the script.
#
# Usage usage
#
usage() {
  echo "usage: mount_hidrive username [password]"
}

#
# Open a VPN connection using Viscosity
#
# Usage: open_vpn_connection
#
# $1 = Name of the connection
#
open_vpn_connection() {
  if [[ -d "/Applications/Viscosity.app" ]]; then
    osascript -e "tell application \"Viscosity\" to connect \"$1\""
  fi
}

#
# Find password in apple keychain.
#
# Usage: find_password uri
#
# $1 = URI of the password to retrieve
#
find_password() {
  security find-internet-password -gl "$1" 2>&1 >/dev/null | grep password | /usr/bin/cut -d'"' -f 2
}

#
# Url encode the given value
#
# Usage: url_encode value
#
# $1 = Value to encode
#
url_encode() {
  python -c "import sys, urllib as ul; print ul.quote_plus('$1')"
}

#
# Script entry point
#
# [$1] = Username for Strato HiDrive
# [$2] = Password to use for Strato HiDrive
# [$3] = Mount point
#
main() {
  local username="${1:-$HIDRIVE_USER}"
  local password="${2:-$HIDRIVE_PASSWD}"
  local target="${3:-/Volumes/HiDrive}"

  if [[ -z "$username" ]]; then
    usage
    return 1
  fi

  local server="$username.smb.hidrive.strato.com"

  if [[ -z "$password" ]]; then
    password=$(find_password "$server")
    password=$(url_encode "$password")
  fi

  if [[ -z "$password" ]]; then
    echo "Â» Password not found in keychain"
    return 1
  fi

  if [[ ! -d "$target" ]]; then
    mkdir "$target"
    chmod 0700 "$target"
  fi

  if [[ "$OSTYPE" == darwin* ]]; then
    open_vpn_connection "HiDrive"
  fi

  mount -t smbfs "//$username:$password@$server/root/users/$username" "$target"
  return 0
}

main "$@"
