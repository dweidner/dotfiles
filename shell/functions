# shell/functions

#
# Search the shell history.
#
# Usage: h [term]
#
# [$1] = Keyword to search for in the history.
#
function h() {
  if [ "$#" -eq 0 ]; then
    fc -El 1
  else
    fc -El 1 | grep "$*"
  fi
}

#
# Switch to the given directory and list the directory contents.
#
# Usage: cdl directory
#
# $1 = Directory to change to.
#
function cdl() {
  builtin cd -- "$1" && command "${LS_BINARY:-ls}" -lhF "${ls_options[@]}"
}

#
# Create a given directory and then switch to it.
#
# Usage: mkcd directory
#
# $1 = Directory to create.
#
function mkcd() {
  command mkdir -p -- "$*" && builtin cd -- "$*"
}

#
# Take ownership of the given file or directory.
#
# Usage: grab [directory]
#
# [$1] = Path to the directory to take ownership for.
#
function grab() {
  sudo chown -R "$USER" "${1:-.}"
}

#
# Extract various compression formats with a single function call
#
# Usage: extract file
#
# $1 = Path to the archive to extract.
#
function extract() {
  if [[ ! -f "$1" ]]; then
    printf "extract: No such file or directory “%s”\n" "$1"
    return 1
  fi

  case "$1" in
    *.tar.bz2)  tar xjf "$1";;
    *.tar.gz)   tar xzf "$1";;
    *.gz)       gunzip "$1";;
    *.tar)      tar xf "$1";;
    *.tbz2)     tar xjf "$1";;
    *.tgz)      tar xzf "$1";;
    *.zip)      unzip "$1";;
    *.Z)        uncompress "$1";;
    *.rar)      unrar x -ad "$1";;
    *)          printf "extract: “%s” cannot be extracted via extract()\n" "$1";;
  esac
}

# vim:syntax=sh:foldmethod=marker:foldlevel=2
