# shell/bash_prompt

#
# Pure Prompt: Git Status
#
# A helper function used to determine the branch name and
# -status of a git repository.
#
# Usage: pure_prompt_git [color]
#
# [$1] = Color to use.
# [$2] = 
#
pure_prompt_git() {
  local branch=""
  local status=""

  # Ensure the current directory is a git repository
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "$?") -ne 0 ]; then
    return
  fi

  # Determine the name of the current branch:
  # 1. Use the short symbolic reference, if available
  # 2. Use the short SHA as a fallback
  # 3. Give up otherwise
  branch="$(
    git symbolic-ref --quiet --short HEAD 2>/dev/null || \
    git rev-parse --short HEAD 2>/dev/null || \
    echo "unknown"
  )"

  # Determine the status of the current git direcotry (clean/dirty)
  if [ -n "$(git status --short 2>/dev/null)" ]; then
    status="${PURE_GIT_DIRTY:-*}"
  fi

  # Return the name of the current branch and its current status
  echo -e "$branch$status"
}

#
# Pure Prompt
#
# Attempt to mimic the appearance of the zsh prompt theme ‘pure’
# in bash.
#
# Usage: pure_prompt
#
pure_prompt() {
  # Default values as used by the zsh theme ‘pure’
  local symbol="${PURE_PROMPT_SYMBOL:-\$}"

  # Collection of ANSI foreground colors
  typeset -a fg
  if [ -x "/usr/bin/tput" ] && tput setaf 1 2>/dev/null; then
    tput sgr0
    local gray="\[$(tput setaf 242)\]"
    local red="\[$(tput setaf 1)\]"
    local green="\[$(tput setaf 2)\]"
    local yellow="\[$(tput setaf 3)\]"
    local blue="\[$(tput setaf 4)\]"
    local magenta="\[$(tput setaf 5)\]"
    local cyan="\[$(tput setaf 6)\]"
    local reset="\[$(tput sgr0)\]"
  else
    local gray="\[\e[0;30m\]"
    local red="\[\e[1;31m\]"
    local green="\[\e[1;32m\]"
    local yellow="\[\e[1;33m\]"
    local blue="\[\e[1;34m\]"
    local magenta="\[\e[1;35m\]"
    local cyan="\[\e[1;36m\]"
    local reset="\[\e[0m\]"
  fi

  # Customize the shell prompt
  # 1. Display the current working directory
  # 2. Display the currently checked out branch of a git repository
  # 3. Display the user name and host when connected to a remote server
  # 4. Display the prompt symbol in red when the last command failed
  PS1="\n$blue\w$reset "
  PS1+="$gray\$(pure_prompt_git)$reset "
  PS1+="\$([ -n \"\$SSH_CONNECTION\" ] && echo \"$gray\u@\h$reset\") "
  PS1+="\n\$( (( \$? )) && echo \"$magenta\" || echo \"$red\" )$symbol$reset "

  # Make the changes to the prompt permanent
  export PS1
}

# Customize the prompt and mimic the zsh theme ‘pure’
pure_prompt

# Avoid polluting the global scope
unset pure_prompt

# vim:syntax=sh
