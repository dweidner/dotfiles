" vimrc

" -------------------------------------
" Table of Contents
" -------------------------------------
" 1. Vim Plugins
" 2. General Settings
" 3. Look & Feel
" 4. Text Editing and Searching
" 5. Indentation and Tabs
" 6. Mappings & Controls
" 7. Misc
" -------------------------------------

set nocompatible

let g:vim_home  = fnamemodify(resolve(expand('$MYVIMRC')), ':p:h')
let g:plug_home = g:vim_home . '/bundle'

let s:darwin = has('mac')
let s:gui = has('gui_running')


" 1. Vim Plugins ---------------------- {{{1

call plug#begin()

  " a) Appearance --------------------- {{{2
  " ¹  Start screen for vim
  " ²  Customize vim's statusline
  " ³  Show file changes in gutter
  " ⁴  Highlight colors in CSS/SASS
  " ⁵  Highlight overly long lines
  " -----------------------------------
  Plug 'mhinz/vim-startify'
  Plug 'itchyny/lightline.vim'
  Plug 'airblade/vim-gitgutter'
  Plug 'ap/vim-css-color'
  Plug 'whatyouhide/vim-lengthmatters', { 'on': ['LengthmattersEnable', 'LengthmattersDisable', 'LengthmattersToggle'] }

  " b) System Integration ------------- {{{2
  " ¹  Navigate files/buffers
  " ²  Open locally modified files
  " ³  Search file contents
  " ⁴  Simplified cut & paste
  " ⁵  Unix utilities in vim
  " ⁶  Git integration
  " ⁷  Look up documentation
  " -----------------------------------
  Plug 'ctrlpvim/ctrlp.vim'
  Plug 'jasoncodes/ctrlp-modified.vim'
  Plug 'mileszs/ack.vim'
  Plug 'svermeulen/vim-easyclip'
  Plug 'tpope/vim-eunuch'
  Plug 'tpope/vim-fugitive'
  if s:darwin
    Plug 'keith/investigate.vim'
  endif

  " c) Text Editing ------------------- {{{2
  " ¹  Check file syntax
  " ²  Wrap text objects
  " ³  Remove trailing spaces
  " ⁴  Align text elements
  " ⁵  Toggle comments
  " ⁶  Write html markup easily
  " -----------------------------------
  Plug 'scrooloose/syntastic'
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-unimpaired'
  Plug 'itspriddle/vim-stripper'
  Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
  Plug 'ciaranm/detectindent',    { 'on': 'DetectIndent' }
  Plug 'tpope/vim-commentary',    { 'on': '<Plug>Commentary' }
  Plug 'mattn/emmet-vim',         { 'for': ['html', 'html.twig', 'php', 'css', 'scss', 'sass'] }

  " d) Completion --------------------- {{{2
  " ¹  Snippet manager
  " ²  Tab or Auto-Complete
  " ³  PHP omnicomplete
  " ⁴  HTML5 & SVG omnicomplete
  " -----------------------------------
  Plug 'SirVer/ultisnips',           { 'on': [] }
  Plug 'Valloric/YouCompleteMe',     { 'on': [], 'do': function('dw#BuildYCM') }
  Plug 'shawncplus/phpcomplete.vim', { 'for': 'php' }
  Plug 'othree/html5.vim',           { 'for': ['html', 'svg', 'php'] }

  " e) Syntax/File Type Additions ----- {{{2
  " ¹  Support PHP 5.6 features
  " ²  Improve hilighting for Twig
  " ³  Add ES6 support
  " ⁴  Improve js indentation
  " ⁵  Improve higlighting for SASS
  " ⁶  Improve support for CSS3
  " ⁷  Load *.md files as markdown
  " ⁸  Update syntax and indentation
  " ⁹  Add Liquid & Jekyll support
  " ¹⁰ Highlighting & quote concealing
  " -----------------------------------
  Plug 'StanAngeloff/php.vim',      { 'for': 'php' }
  Plug 'evidens/vim-twig',          { 'for': 'html.twig' }
  Plug 'othree/yajs.vim',           { 'for': 'javascript' }
  Plug 'gavocanov/vim-js-indent',   { 'for': 'javascript' }
  Plug 'cakebaker/scss-syntax.vim', { 'for': 'scss' }
  Plug 'hail2u/vim-css3-syntax',    { 'for': ['css', 'scss'] }
  Plug 'tpope/vim-markdown',        { 'for': 'markdown' }
  Plug 'tpope/vim-git',             { 'for': ['git', 'gitcommit', 'gitconfig', 'gitrebase', 'gitsendmail'] }
  Plug 'tpope/vim-liquid',          { 'for': 'liquid' }
  Plug 'elzr/vim-json',             { 'for': 'json' }

  " f) Misc/Utility ------------------- {{{2
  " ¹  Auto-generate ctags
  " ²  Auto update working directory
  " ³  Support async commands
  " ⁴  Repeat plugin commands
  " ⁵  Remember cursor position
  " ⁶  Fix cursor/focus events in tmux
  " -----------------------------------
  Plug 'ludovicchabant/vim-gutentags'
  Plug 'airblade/vim-rooter'
  Plug 'tpope/vim-dispatch'
  Plug 'tpope/vim-repeat'
  Plug 'dietsche/vim-lastplace'
  Plug 'sjl/vitality.vim'
  " }}}

call plug#end()

augroup plug_lazyload
  autocmd!
  autocmd InsertEnter * call plug#load('ultisnips', 'YouCompleteMe')
        \| call UltiSnips#FileTypeChanged()
        \| autocmd! plug_lazyload
augroup end


" 2. General settings ----------------- {{{1

augroup vimrc
  autocmd!
augroup END

set encoding=utf-8                    " Encoding used in vim
set lazyredraw                        " No redraw for macros and commands
set synmaxcol=512                     " Reduce number of columns to highlight
set hidden                            " Hide modified buffers, don't complaint
set autoread                          " Reload file if modified outside vim
set history=1000                      " Increase number of commands saved
set switchbuf+=useopen                " Reuse open buffers
set clipboard+=unnamed                " Use system clipboard by default
set fileformats=unix,dos,mac          " Enable automatic fileformat detection

set ttyfast                           " Optimize for fast terminal connection
set timeoutlen=500                    " Time waited for a key code to complete
set scrolloff=8                       " Min. lines to keep above/below
set sidescrolloff=16                  " Min. cols to keep left/right

set splitright                        " Split to the right
set splitbelow                        " Split to the bottom

set noswapfile                        " Do not create swap files for buffers
set undofile                          " Save undo history to file
set undolevels=500                    " Reduce number of changes saved

exe 'set viminfo+=n' . g:vim_home . '/tmp/viminfo'
exe 'set directory=' . g:vim_home . '/tmp/swap//'
exe 'set undodir='   . g:vim_home . '/tmp/undo//'
exe 'set backupdir=' . g:vim_home . '/tmp/backup//'
exe 'set spellfile+=' . g:vim_home . '/spell/en.utf-8.add'
exe 'set spellfile+=' . g:vim_home . '/spell/de.utf-8.add'


" 3. Look & Feel ---------------------- {{{1

if s:gui

  "set guifont=Menlo\ Regular:h15      " Select font to use
  "set linespace=2                     " Increase spacing between lines

  set guifont=CamingoCode\ Regular:h16 " Prefer CamingoCode if available
  set guioptions-=m                    " Hide menubar
  set guioptions-=T                    " Hide toolbar

  set columns=180 lines=50             " Provide enough space for two panes

endif

colorscheme solarized                 " Select color theme to use

set number                            " Show line numbers
set cursorline                        " Highlight current line
set ruler                             " Display cursor position
set showcmd                           " Show currently running command
set noshowmode                        " Mode is displayed in lightline already
set shortmess=aIT                     " Use abbreviation in messages
set showmatch                         " Highlight matching parenthesis
set showbreak=↪\                      " Show line breaks

set laststatus=2                      " Always display the status line
set cmdheight=1                       " Avoid hit-enter prompts
set pumheight=10                      " Limit visible entries of the popup menu

set list                              " Show invisible characters
set listchars=tab:→\                  " Show tab stops
set listchars+=trail:·                " Show trailing spaces
set listchars+=nbsp:⣿                 " Show non breaking spaces
set listchars+=extends:»              " Line continues off-screen
set listchars+=precedes:«             " Line precedes off-screen
"set listchars+=eol:¬                 " Show end of line markers

set wildmenu                          " Visual autocomplete for command menu
set wildmode=list:longest             " Set wildmenu to list choice

set wildignore+=*/.git/*,*/.hg/*,*/.svn/*
set wildignore+=*.jpg,*.jpeg,*.png,*.gif,*.tiff,*.psd
set wildignore+=*.zip,*.tar,*.tar.gz,*.dmg
set wildignore+=*.pdf,*.doc,*.docx,*.xls,*.xlsx,*.ppt,*.pptx
set wildignore+=*.mp3,*.mp4,*.mov
set wildignore+=*.gem,gems/**
set wildignore+=*/node_modules/**
set wildignore+=*/tmp/**,.DS_Store,Icon


" 4. Text Editing and Searching ------- {{{1

set incsearch                         " Highlight dynamically while typing
set hlsearch                          " Highlight matches of previous search
set ignorecase                        " Ignore case when searching
set smartcase                         " Be case-sensitive when using capitals

set nowrap                            " No line wrapping by default
set textwidth=0                       " Avoid line breaks by default
set nojoinspaces                      " Use only one space after a '.'

set formatoptions-=o                  " Do not insert comment leader after o
set formatoptions+=n                  " Recognize numbered lists in comments
set formatoptions+=j                  " Remove comment leader when joining

set nrformats-=octal                  " Don't use octals when incrementing

set complete-=i                       " Don't scan included files
set complete-=t                       " Avoid tag completion
set completeopt+=longest              " Only insert the longest common text
set completeopt+=menu                 " Show possible completions in a popup
set completeopt+=menuone              " Show the popup for a single match
"set completeopt-=preview             " Hide extra information in pum

set diffopt+=vertical                 " Start diff mode with vertical splits
set diffopt+=filler                   " Keep the windows synchronized
set diffopt+=iwhite                   " Ignore changes in amount of whitespace

set matchpairs+=<:>                   " Change html tags with ci< or ci>

set nospell                           " Disable spell checking by default
set spelllang=en,de                   " Languages to use for spell checks

set foldcolumn=0                      " Do not show a fold column
set nofoldenable                      " Open all folds by default
set foldlevel=99
set foldlevelstart=99


" 5. Indentation and Tabs ------------- {{{1

set autoindent                        " Start indentation at same position
set smarttab                          " Insert blanks according to shiftwidth
set expandtab                         " Expand <Tab>s with spaces
set tabstop=2                         " Proper display of files with tabs
set shiftwidth=2                      " Spaces for each tab stop of (auto)indent
set softtabstop=2                     " Set virtual tab stop
set shiftround                        " Round indents to multiple of shiftwidth


" 6. Mappings & Controls -------------- {{{1

set mouse=a ttymouse=xterm2           " Enable mouse support. Shame on me...
set pastetoggle=<F4>                  " Toggle paste mode

set nostartofline                     " Do not reset cursor position
set backspace=indent,eol,start        " Change the behavior of backspace


  " a) General ------------------------ {{{2

  " Using space as leader makes sense,
  " as it is easy to reach and does not
  " have a special meaning (in vim’s
  " normal mode). Unfortunatly with
  " space as leader nothing is
  " displayed, when using showmode. As
  " a workaround we simply map space to
  " the default leader key.
  map <Space> <Leader>


  " Avoid the escape key
  inoremap jk <Esc>
  xnoremap jk <Esc>
  cnoremap jk <C-c>

  " Ensure that InsertLeave is fired,
  " when quiting insert mode with Ctrl-c
  inoremap <C-c> <Esc>

  " Expand %% to the same directory of
  " the current file
  cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<CR>

  " Reselect visual block
  xnoremap < <gv
  xnoremap > >gv


  " b) Localization ------------------- {{{2

  " Some keys are simply hard to reach on
  " a german keyboard. I use the keys for
  " Umlauts to make some of them more
  " accessible in normal mode.

  " Square/curly bracket commands
  map ü [
  map + ]
  noremap Ü {
  noremap * }

  " Section forward/backward
  map üü [[
  map ++ ]]
  map ü+ []
  map +ü ][

  " Access the shadowed star operator
  noremap ö *
  noremap Ö #

  " Single/double quotes
  noremap ä '
  noremap Ä "

  " Search forward/backward
  noremap - /
  noremap _ ?

  " Jump to the definition of the keyword
  nnoremap <Leader>+ <C-]>


  " c) Movement ----------------------- {{{2

  " Move to the beginning/end of the line
  " instead of the top/bottom window
  " @see <https://bitbucket.org/sjl/dotfiles>
  nnoremap H ^
  nnoremap L $
  vnoremap L g_

  " Faster linewise scrolling
  nnoremap <C-e> 3<C-e>
  nnoremap <C-y> 3<C-y>

  " Movement in insert mode
  inoremap <C-h> <C-o>h
  inoremap <C-l> <C-o>a
  inoremap <C-j> <C-o>j
  inoremap <C-k> <C-o>k


  " d) Window/Buffer Management ------- {{{2

  " Switch to alternate buffer
  nnoremap <Leader><Space> <C-^>

  " Save the current buffer
  nnoremap <C-s> :update<CR>
  inoremap <C-s> <C-o>:update<CR>

  " Close the current or all windows
  nnoremap <Leader>q :quit<CR>
  nnoremap <Leader>Q :quitall!<CR>
  nnoremap <C-q> :quit<CR>
  inoremap <C-q> <Esc>:quit<CR>

  " Circular window navigation
  nnoremap <Tab> <C-w>w
  nnoremap <S-Tab> <C-w>W

  " Split window vertically/horizontally
  nnoremap <Leader>wv <C-w>v<C-w>l
  nnoremap <Leader>ws <C-w>s<C-w>j

  " Load frequently used window layouts
  nnoremap <Leader>w1 <C-w>o
  nnoremap <Leader>w2 <C-w>s<C-w>k
  nnoremap <Leader>w3 <C-w>s<C-w>j<C-w>v<C-w>k
  nnoremap <Leader>w4 <C-w>s<C-w>v<C-w>k<C-w>v<C-w>h


  " e) Search/Replace ----------------- {{{2

  " Hide matches from previous search
  noremap <silent> <Leader>/ :nohls<CR>
  noremap <silent> <Leader>- :nohls<CR>

  " Shortcuts to vim's :substitute
  " Using @ as a separator to allow searching for /
  nnoremap <Leader>s :%s@@@gc<Left><Left><Left><Left>
  nnoremap <Leader>S :%s@@@g<Left><Left><Left>
  vnoremap <Leader>s :<C-u>%s@\%V@@gc<Left><Left><Left><Left>
  vnoremap <Leader>S :<C-u>%s@\%V@@g<Left><Left><Left>


  " f) Misc --------------------------- {{{2

  " Swap lines using vim-unimpaired
  " @see <https://github.com/davidosomething/dotfiles>
  nmap <special> <C-k> [e
  nmap <special> <C-j> ]e
  vmap <special> <C-k> [egv
  vmap <special> <C-j> ]egv

  " qq to record, Q to replay a macro
  nmap Q @q

  "}}}2


" 7. Misc ----------------------------- {{{1

runtime! macros/matchit.vim           " Load matchit.vim
runtime! config/plugin.*.vim          " Load additional plugin configuration
set secure                            " Block some write operations and autocmd

" }}}1


" vim:foldmethod=marker:foldlevel=2
