#!/usr/bin/env bash
#
# @file Create symlinks to dotfiles.

set -e

readonly BASEDIR="$(dirname "$0")"
source "${BASEDIR}/../shell/utilities.sh"

#
# Copy a file from the dotfiles repository to the home directory of the
# current user.
#
# usage: copy <source> <target>
#
copy() {
  if [[ ! -r "${DOTFILES}/${1}" ]]; then
    dot::fail "Cannot find $1 in the dotfiles repository"
  fi

  cp -i "${DOTFILES}/${1}" "${HOME}/${2}"
}

#
# Create a symlink from a file in the dotfiles repository to a file in the
# home directory.
#
# usage: symlink <source> <target>
#
symlink() {
  if [[ ! -r "${DOTFILES}/${1}" ]]; then
    dot::fail "Cannot find $1 in the dotfiles repository"
  fi

  ln -fs "${DOTFILES}/${1}" "${HOME}/${2}"
}

#
# Create the symlinks for the readline configuration.
#
# usage: symlink_inputrc
#
symlink_inputrc() {
  symlink "shell/inputrc" ".inputrc"
}

# 
# Create the symlinks for the bash configuration.
#
# usage: symlink_bashrc
#
symlink_bashrc() {
  symlink "bash/bash_profile" ".bash_profile"
  symlink "bash/bashrc" ".bashrc" 
}

#
# Create the symlinks for the git configuration.
#
# usage: symlink_gitrc
#
symlink_gitrc() {
  # Copy `.gitconfig` as it typically includes user credentials
  copy "git/gitconfig" ".gitconfig"

  symlink "git/gitattributes" ".gitattributes"
  symlink "git/gitignore" ".gitignore"
}

#
# Create symlinks to the configuration files shiping with the
# dotfiles-repository.
#
# usage: symlinks [<profile>]
#
main() {
  local profile="${1:-full}"

  case "${profile}" in
    full)
      symlink_inputrc
      symlink_bashrc
      symlink_gitrc
      ;;
    *)
      symlink_inputrc
      symlink_bashrc
      symlink_gitrc
      ;;
  esac
}

main "$@"

# vim:foldmethod=marker:foldlevel=2
