#!/usr/bin/env bash
#
# @file Create symlinks to dotfiles.

readonly BASEDIR="$(dirname "$0")"
source "${BASEDIR}/../shell/utilities.sh"

#
# Create the directory structure for the given path.
#
# usage: create_dir <path>
#
create_path() {
  local path="$1"
  local dir
  dir="$(dirname "$path")"

  if [[ ! -d "$dir" ]]; then
    mkdir -p "$dir"
    return $?
  fi

  return 0
}

#
# Copy a file from the dotfiles repository to the home directory of the
# current user.
#
# usage: copy <source> <target>
#
copy() {
  local source="${DOTFILES}/$1"
  local target="$2"

  if [[ -e "${target}" ]]; then
    if ! dot::confirm "overwrite ${target/#${HOME}/\~}?"; then
      dot::warning "skipping ${target} …"
      return 1
    fi
  fi

  if ! create_path "${target}"; then
    dot::error "could not create parent directory"
    return 1
  fi

  cp -f "${source}" "${target}" \
    && dot::ok "copied file to ${target/#${HOME}/\~}"
}

#
# Create a symlink from a file in the dotfiles repository to a file in the
# home directory.
#
# usage: symlink <source> <target>
#
symlink() {
  local source="${DOTFILES}/$1"
  local target="$2"

  if [[ -e "${target}" ]]; then
    if ! dot::confirm "overwrite ${target/#${HOME}/\~}?"; then
      dot::warning "skipping ${target} …"
      return 1
    fi
  fi

  if ! create_path "${target}"; then
    dot::error "could not create parent directory"
    return 1
  fi

  ln -fns "${source}" "${target}" \
    && dot::ok "created symlink to ${target/#${HOME}/\~}"
}

#
# Create symlinks to the configuration files shiping with the
# dotfiles-repository.
#
# usage: symlink
#
main() {
  local cache_home="${XDG_CACHE_HOME:-$HOME/.cache}"
  local config_home="${XDG_CONFIG_HOME:-$HOME/.config}"
  local data_home="${XDG_DATA_HOME:-$HOME/.local/share}"

  mkdir -p "${cache_home}"
  mkdir -p "${config_home}"
  mkdir -p "${data_home}"

  for dir in "bash" "less" "zsh"; do
    mkdir -p "${data_home}/${dir}"
  done

  dot::info "Creating symlinks …"

  symlink "bash/bash_profile" "${HOME}/.bash_profile"
  symlink "bash/bashrc"       "${HOME}/.bashrc" 
  symlink "misc/editorconfig" "${HOME}/.editorconfig"

  symlink "shell/inputrc" "${config_home}/readline/inputrc"
  symlink "misc/gemrc"    "${config_home}/gem/config"
  symlink "git/ignore"    "${config_home}/git/ignore"
  symlink "git/commitmsg" "${config_home}/git/commitmsg"
  copy    "git/config"    "${config_home}/git/config"
}

main "$@"
